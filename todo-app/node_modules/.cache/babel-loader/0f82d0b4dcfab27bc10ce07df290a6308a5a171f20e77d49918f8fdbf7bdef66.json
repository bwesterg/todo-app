{"ast":null,"code":"var _jsxFileName = \"/Users/bentonwestergaard/2023_projects/intrado/react_projects/todo-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst todosUrl = \"http://127.0.0.1:3000/todos\";\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: []\n    };\n    this.getTodos = () => {\n      fetch(todosUrl).then(response => response.json()).then(todos => this.setState({\n        todos\n      }));\n    };\n  }\n  //only runs one time, after initial render.  \n  //running fetch inside componentDidMount rather than, say, componentDidUpdate, is less data intensive.  Especially if app makes multiple api calls.\n  componentDidMount() {\n    this.getTodos();\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","todosUrl","App","constructor","args","state","todos","getTodos","fetch","then","response","json","setState","componentDidMount","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/bentonwestergaard/2023_projects/intrado/react_projects/todo-app/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nconst todosUrl = \"http://127.0.0.1:3000/todos\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  //only runs one time, after initial render.  \n  //running fetch inside componentDidMount rather than, say, componentDidUpdate, is less data intensive.  Especially if app makes multiple api calls.\n  componentDidMount(){\n    this.getTodos()\n  }\n  \n  getTodos = () => {\n    fetch(todosUrl)\n      .then(response => response.json())\n      .then(todos => this.setState({todos})) \n    \n  }\n  \n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>Todo App</h1>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,QAAQ,GAAG,6BAA6B;AAE9C,MAAMC,GAAG,SAASJ,SAAS,CAAC;EAAAK,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAC1BC,KAAK,GAAG;MACNC,KAAK,EAAE;IACT,CAAC;IAAA,KAQDC,QAAQ,GAAG,MAAM;MACfC,KAAK,CAACP,QAAQ,CAAC,CACZQ,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACH,KAAK,IAAI,IAAI,CAACM,QAAQ,CAAC;QAACN;MAAK,CAAC,CAAC,CAAC;IAE1C,CAAC;EAAA;EAXD;EACA;EACAO,iBAAiBA,CAAA,EAAE;IACjB,IAAI,CAACN,QAAQ,CAAC,CAAC;EACjB;EAUAO,MAAMA,CAAA,EAAE;IACN,oBACEd,OAAA;MAAKe,SAAS,EAAC,KAAK;MAAAC,QAAA,eAClBhB,OAAA;QAAAgB,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACd,CAAC;EAEV;AACF;AAEA,eAAelB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}