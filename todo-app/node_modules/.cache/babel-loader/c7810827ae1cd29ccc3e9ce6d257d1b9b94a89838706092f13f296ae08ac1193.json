{"ast":null,"code":"var _jsxFileName = \"/Users/bentonwestergaard/2023_projects/intrado/react_projects/todo-app/src/components/TodoForm.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: \"\",\n  content: \"\",\n  urgent: false,\n  done: false\n};\n\n//needs to be class component b/c forms will get their value from state\nexport default class TodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n    // State initialized as initialState.\n    // This way, when I want to reset state to their initial values, I can call initialState.\n    this.handleChange = event => {\n      let {\n        name,\n        value,\n        checked\n      } = event.target;\n      value = name === \"urgent\" ? checked : value;\n      this.setState({\n        [name]: value\n      });\n    };\n    this.handleSubmit = event => {\n      event.preventDefault();\n    };\n  }\n  //needs function in app.js to change state of todos when new todo is added\n\n  render() {\n    const {\n      title,\n      content,\n      urgent\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo-form\",\n      onSubmit: this.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"urgent-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Urgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"urgent\",\n          checked: urgent,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","initialState","title","content","urgent","done","TodoForm","constructor","args","state","handleChange","event","name","value","checked","target","setState","handleSubmit","preventDefault","render","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange"],"sources":["/Users/bentonwestergaard/2023_projects/intrado/react_projects/todo-app/src/components/TodoForm.js"],"sourcesContent":["import React, { Component } from 'react';\n\nconst initialState = {\n    title: \"\",\n    content: \"\",\n    urgent: false,\n    done: false\n}\n\n//needs to be class component b/c forms will get their value from state\nexport default class TodoForm extends Component {\n\n\n    state = initialState\n    // State initialized as initialState.\n    // This way, when I want to reset state to their initial values, I can call initialState.\n\n    handleChange = (event) => {\n        let {name, value, checked} = event.target\n\n        value = (name === \"urgent\") ? checked : value\n        this.setState({\n            [name]: value \n        })\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n\n    }\n\n      //needs function in app.js to change state of todos when new todo is added\n\n\n    render(){\n        const {title, content, urgent} = this.state\n\n        return (\n            <form className=\"todo-form\" onSubmit={this.handleSubmit}>\n                <h2>Create a New Todo</h2>\n                <label>Title</label>\n                <input type=\"text\" name=\"title\" value={title} onChange={this.handleChange} />\n                <label>Content</label>\n                <input type=\"text\" name=\"content\" value={content} onChange={this.handleChange} />\n                <div className=\"urgent-input\">\n                    <label>Urgent</label>\n                    <input \n                        type=\"checkbox\" \n                        name=\"urgent\" \n                        checked={urgent} \n                        onChange={this.handleChange} \n                    />\n                </div>\n                <input type=\"submit\" />\n\n\n            </form>\n        )\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACV,CAAC;;AAED;AACA,eAAe,MAAMC,QAAQ,SAASR,SAAS,CAAC;EAAAS,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAG5CC,KAAK,GAAGR,YAAY;IACpB;IACA;IAAA,KAEAS,YAAY,GAAIC,KAAK,IAAK;MACtB,IAAI;QAACC,IAAI;QAAEC,KAAK;QAAEC;MAAO,CAAC,GAAGH,KAAK,CAACI,MAAM;MAEzCF,KAAK,GAAID,IAAI,KAAK,QAAQ,GAAIE,OAAO,GAAGD,KAAK;MAC7C,IAAI,CAACG,QAAQ,CAAC;QACV,CAACJ,IAAI,GAAGC;MACZ,CAAC,CAAC;IACN,CAAC;IAAA,KAEDI,YAAY,GAAIN,KAAK,IAAK;MACtBA,KAAK,CAACO,cAAc,CAAC,CAAC;IAE1B,CAAC;EAAA;EAEC;;EAGFC,MAAMA,CAAA,EAAE;IACJ,MAAM;MAACjB,KAAK;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACK,KAAK;IAE3C,oBACIT,OAAA;MAAMoB,SAAS,EAAC,WAAW;MAACC,QAAQ,EAAE,IAAI,CAACJ,YAAa;MAAAK,QAAA,gBACpDtB,OAAA;QAAAsB,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B1B,OAAA;QAAAsB,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpB1B,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEX,KAAM;QAAC0B,QAAQ,EAAE,IAAI,CAAClB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC7E1B,OAAA;QAAAsB,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtB1B,OAAA;QAAO2B,IAAI,EAAC,MAAM;QAACf,IAAI,EAAC,SAAS;QAACC,KAAK,EAAEV,OAAQ;QAACyB,QAAQ,EAAE,IAAI,CAAClB;MAAa;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjF1B,OAAA;QAAKoB,SAAS,EAAC,cAAc;QAAAE,QAAA,gBACzBtB,OAAA;UAAAsB,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrB1B,OAAA;UACI2B,IAAI,EAAC,UAAU;UACff,IAAI,EAAC,QAAQ;UACbE,OAAO,EAAEV,MAAO;UAChBwB,QAAQ,EAAE,IAAI,CAAClB;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACN1B,OAAA;QAAO2B,IAAI,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB,CAAC;EAEf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}