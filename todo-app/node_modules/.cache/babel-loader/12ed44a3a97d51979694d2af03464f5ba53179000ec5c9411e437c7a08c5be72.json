{"ast":null,"code":"var _jsxFileName = \"/Users/bentonwestergaard/2023_projects/intrado/react_projects/todo-app/src/components/TodoForm.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  title: \"\",\n  content: \"\",\n  urgent: false,\n  done: false\n};\n\n//needs to be class component b/c forms will get their value from state\nexport default class TodoForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = initialState;\n  }\n  // State initialized as initialState.\n  // This way, when I want to reset state to their initial values, I can call initialState.\n  render() {\n    const {\n      title,\n      content,\n      urgent\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create a New Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"content\",\n        value: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"urgent-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Urgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"urgent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","initialState","title","content","urgent","done","TodoForm","constructor","args","state","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","name","value"],"sources":["/Users/bentonwestergaard/2023_projects/intrado/react_projects/todo-app/src/components/TodoForm.js"],"sourcesContent":["import React, { Component } from 'react';\n\nconst initialState = {\n    title: \"\",\n    content: \"\",\n    urgent: false,\n    done: false\n}\n\n//needs to be class component b/c forms will get their value from state\nexport default class TodoForm extends Component {\n\n\n    state = initialState\n    // State initialized as initialState.\n    // This way, when I want to reset state to their initial values, I can call initialState.\n\n    render(){\n        const {title, content, urgent} = this.state\n\n        return (\n            <form className=\"todo-form\">\n                <h2>Create a New Todo</h2>\n                <label>Title</label>\n                <input type=\"text\" name=\"title\" value={title}/>\n                <label>Content</label>\n                <input type=\"text\" name=\"content\" value={content} />\n                <div className=\"urgent-input\">\n                    <label>Urgent</label>\n                    <input type=\"checkbox\" name=\"urgent\" />\n                </div>\n                <input type=\"submit\" />\n\n\n            </form>\n        )\n    }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE,EAAE;EACXC,MAAM,EAAE,KAAK;EACbC,IAAI,EAAE;AACV,CAAC;;AAED;AACA,eAAe,MAAMC,QAAQ,SAASR,SAAS,CAAC;EAAAS,YAAA,GAAAC,IAAA;IAAA,SAAAA,IAAA;IAAA,KAG5CC,KAAK,GAAGR,YAAY;EAAA;EACpB;EACA;EAEAS,MAAMA,CAAA,EAAE;IACJ,MAAM;MAACR,KAAK;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACK,KAAK;IAE3C,oBACIT,OAAA;MAAMW,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACvBZ,OAAA;QAAAY,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BhB,OAAA;QAAAY,QAAA,EAAO;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpBhB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,OAAO;QAACC,KAAK,EAAEjB;MAAM;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/ChB,OAAA;QAAAY,QAAA,EAAO;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtBhB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,SAAS;QAACC,KAAK,EAAEhB;MAAQ;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACpDhB,OAAA;QAAKW,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBZ,OAAA;UAAAY,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBhB,OAAA;UAAOiB,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eACNhB,OAAA;QAAOiB,IAAI,EAAC;MAAQ;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGrB,CAAC;EAEf;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}